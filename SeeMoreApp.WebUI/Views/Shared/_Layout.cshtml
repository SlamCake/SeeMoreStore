<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>

@*     Notice that the CSS and JavaScript files that are referenced in Listing 7-24 are done so using the 
@Url.Content method. Unlike the ASPX view engine, Razor doesn’t automatically interpret the tilde character (~) 
as a reference for the root of the application, so we must do this explicitly using the helper method.*@

    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
</head>

<body>
    <div id="header"> 
        @{Html.RenderAction("Summary", "Cart");}
        <div class="title">SeeMoreApp (Test)</div> 
     </div> 
     <div id="categories"> 

@*     The RenderAction method writes its content directly to the response stream, just like the RenderPartial 
method introduced in Chapter 7. This means that the method returns void, and therefore can’t be used with a 
regular Razor @ tag. Instead, we must enclose the call to the method inside a Razor code block (and remember to 
terminate the statement with a semicolon). You can use the Action method as an alternative if you don’t like this 
code-block syntax.*@

        @{ Html.RenderAction("Menu", "Nav");}
     </div> 
     <div id="content"> 
        @RenderBody() 
    </div>
</body>
</html>
